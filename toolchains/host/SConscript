Import('env')

toolchain_dir = env.Dir('/usr')
toolchain_bindir = toolchain_dir.Dir('bin')
toolchain_prefix = ''

import commands
status, output = commands.getstatusoutput('/usr/bin/gcc -dumpmachine')
if status != 0:
  print "Unable to fetch host tools triplet ..."
  print 'Error: ' + output
else:
  toolchain_prefix = output + '-'

bins = [
  toolchain_bindir.File(toolchain_prefix + 'ar'),
  toolchain_bindir.File(toolchain_prefix + 'as'),
  toolchain_bindir.File(toolchain_prefix + 'gcc'),
  toolchain_bindir.File(toolchain_prefix + 'g++'),
  toolchain_bindir.File(toolchain_prefix + 'gfortran'),
  toolchain_bindir.File(toolchain_prefix + 'ld'),
  toolchain_bindir.File(toolchain_prefix + 'ranlib'),
]

if env.GetOption('target') == 'host':
  env.PrependENVPath('PATH', toolchain_bindir.abspath)
  env['CPPPATH'].append(toolchain_dir.Dir('include'))

  env['AR'] = toolchain_bindir.File(toolchain_prefix + 'ar')
  env['AS'] = toolchain_bindir.File(toolchain_prefix + 'as')
  env['CC'] = toolchain_bindir.File(toolchain_prefix + 'gcc')
  env['CXX'] = toolchain_bindir.File(toolchain_prefix + 'g++')
  env['FC'] = toolchain_bindir.File(toolchain_prefix + 'gfortran')
  env['LD'] = toolchain_bindir.File(toolchain_prefix + 'ld')
  env['RANLIB'] = toolchain_bindir.File(toolchain_prefix + 'ranlib')
